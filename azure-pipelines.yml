trigger:
  - master
  - develop

name: $(BuildID)-$(Build.SourceBranchName)

stages:
- stage: build

  jobs:
  - job: build
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self
      clean: true
      fetchDepth: 1
    - task: UseDotNet@2
      displayName: ".NET Core 3.1.x"
      inputs:
        packageType: 'sdk'
        version: '3.1.x'
    - task: DotNetCoreCLI@2
      displayName: dotnet restore
      inputs:
        command: restore
        arguments: --source https://api.nuget.org/v3/index.json

    - task: DotNetCoreCLI@2
      displayName: dotnet publish
      inputs:
        command: publish
        publishWebProjects: false
        projects: src/Backend/Backend.csproj
        arguments: -o $(Build.ArtifactStagingDirectory) -c Release --no-restore
        zipAfterPublish: false
        modifyOutputPath: false

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: itlab-salary-build'
      inputs:
        ArtifactName: 'itlab-salary-build'

    - task: CopyFiles@2
      displayName: 'copy deploy artifact'
      inputs:
        SourceFolder: 'deploy'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: itlab-salary-deploy'
      inputs:
        ArtifactName: 'itlab-salary-deploy'
- stage: test

  jobs:
  - job: test

    pool:
      vmImage: ubuntu-latest

    steps:

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'itlab-salary-build'
        targetPath: './tests/e2e/salary-api/itlab-salary-build'
    - task: CmdLine@2
      displayName: run testmace
      inputs:
        script: |
          docker-compose --no-ansi up testmace
        workingDirectory: './tests/e2e'

    - task: CmdLine@2
      displayName: show logs
      inputs:
        script: |
          docker-compose logs test-salary-api
        workingDirectory: './tests/e2e'

    - task: CmdLine@2
      displayName: remove all cintainers
      inputs:
        script: |
          docker-compose --no-ansi rm -f -s
        workingDirectory: './tests/e2e'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'testmace*.xml'
        searchFolder: 'tests/e2e/out'
        failTaskOnFailedTests: true